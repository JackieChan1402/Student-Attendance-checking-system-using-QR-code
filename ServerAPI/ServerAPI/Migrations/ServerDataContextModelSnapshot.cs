// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ServerAPI.Data;

#nullable disable

namespace ServerAPI.Migrations
{
    [DbContext(typeof(ServerDataContext))]
    partial class ServerDataContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ServerAPI.Models.Attendance_sheet", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<int>("Academic_Year")
                        .HasColumnType("int");

                    b.Property<DateTime>("Day_learn")
                        .HasColumnType("datetime2");

                    b.Property<string>("ID_class")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<int>("ID_status")
                        .HasColumnType("int");

                    b.Property<string>("ID_student")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("ID_subject")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Note")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("ID");

                    b.HasIndex("ID_class");

                    b.HasIndex("ID_status");

                    b.HasIndex("ID_student");

                    b.HasIndex("ID_subject");

                    b.ToTable("Attendance_Sheets", (string)null);
                });

            modelBuilder.Entity("ServerAPI.Models.Class", b =>
                {
                    b.Property<string>("ID_class")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.PrimitiveCollection<string>("ID_major")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID_class");

                    b.ToTable("Classes");
                });

            modelBuilder.Entity("ServerAPI.Models.Department", b =>
                {
                    b.Property<string>("ID_department")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Name_department")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("ID_department");

                    b.ToTable("Departments");
                });

            modelBuilder.Entity("ServerAPI.Models.Lecture_information_by_subject", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<int>("Academic_Year")
                        .HasColumnType("int");

                    b.Property<string>("ID_class")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("ID_subject")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("ID_teacher")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.HasKey("ID");

                    b.HasIndex("ID_class");

                    b.HasIndex("ID_subject");

                    b.HasIndex("ID_teacher");

                    b.ToTable("Lecture_Information_By_Subjects", (string)null);
                });

            modelBuilder.Entity("ServerAPI.Models.Major", b =>
                {
                    b.Property<string>("ID_major")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("Major_name")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("ID_major");

                    b.ToTable("Majors");
                });

            modelBuilder.Entity("ServerAPI.Models.Role_person", b =>
                {
                    b.Property<int>("ID_role")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID_role"));

                    b.Property<string>("Name_role")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.HasKey("ID_role");

                    b.ToTable("Role_People", (string)null);
                });

            modelBuilder.Entity("ServerAPI.Models.Status_attendance", b =>
                {
                    b.Property<int>("ID_status")
                        .HasColumnType("int");

                    b.Property<string>("Name_status")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.HasKey("ID_status");

                    b.ToTable("Status_Attendances");
                });

            modelBuilder.Entity("ServerAPI.Models.StudentChangeLog", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Change_time")
                        .HasColumnType("datetime2");

                    b.Property<string>("Changed_by")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Field_changed")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ID_student")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("New_value")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Old_value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ID_student");

                    b.ToTable("Student_change_logs");
                });

            modelBuilder.Entity("ServerAPI.Models.Student_Subject_Class", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<int>("Academic_year")
                        .HasColumnType("int");

                    b.Property<string>("ID_class")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("ID_student")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("ID_subject")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("ID");

                    b.HasIndex("ID_class");

                    b.HasIndex("ID_student");

                    b.HasIndex("ID_subject");

                    b.ToTable("Student_Subject_Classes", (string)null);
                });

            modelBuilder.Entity("ServerAPI.Models.Student_information", b =>
                {
                    b.Property<string>("ID_student")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("Contact")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("ID_major")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("UUID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("User_id")
                        .HasColumnType("int");

                    b.HasKey("ID_student");

                    b.HasIndex("ID_major");

                    b.HasIndex("User_id");

                    b.ToTable("Student_Informations", (string)null);
                });

            modelBuilder.Entity("ServerAPI.Models.Subject_major", b =>
                {
                    b.Property<string>("ID_subject")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Name_subject")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int>("Number_of_credict")
                        .HasColumnType("int");

                    b.HasKey("ID_subject");

                    b.ToTable("subject_Majors");
                });

            modelBuilder.Entity("ServerAPI.Models.Teacher_information", b =>
                {
                    b.Property<string>("ID_teacher")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("Contact")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("Department")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int>("User_id")
                        .HasColumnType("int");

                    b.HasKey("ID_teacher");

                    b.HasIndex("Department");

                    b.HasIndex("User_id");

                    b.ToTable("Teacher_Informations", (string)null);
                });

            modelBuilder.Entity("ServerAPI.Models.User_university", b =>
                {
                    b.Property<int>("ID_User")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID_User"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("MustChangePassword")
                        .HasColumnType("bit");

                    b.Property<string>("Password_user")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Role_user")
                        .HasColumnType("int");

                    b.Property<string>("User_name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID_User");

                    b.HasIndex("Role_user");

                    b.ToTable("User_Universities", (string)null);
                });

            modelBuilder.Entity("ServerAPI.Models.Attendance_sheet", b =>
                {
                    b.HasOne("ServerAPI.Models.Class", "Class")
                        .WithMany()
                        .HasForeignKey("ID_class")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("ServerAPI.Models.Status_attendance", "Status")
                        .WithMany()
                        .HasForeignKey("ID_status")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("ServerAPI.Models.Student_information", "Student")
                        .WithMany()
                        .HasForeignKey("ID_student")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("ServerAPI.Models.Subject_major", "Subject")
                        .WithMany()
                        .HasForeignKey("ID_subject")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Class");

                    b.Navigation("Status");

                    b.Navigation("Student");

                    b.Navigation("Subject");
                });

            modelBuilder.Entity("ServerAPI.Models.Lecture_information_by_subject", b =>
                {
                    b.HasOne("ServerAPI.Models.Class", "Class")
                        .WithMany()
                        .HasForeignKey("ID_class")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("ServerAPI.Models.Subject_major", "Subject")
                        .WithMany()
                        .HasForeignKey("ID_subject")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("ServerAPI.Models.Teacher_information", "Teacher")
                        .WithMany()
                        .HasForeignKey("ID_teacher")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Class");

                    b.Navigation("Subject");

                    b.Navigation("Teacher");
                });

            modelBuilder.Entity("ServerAPI.Models.StudentChangeLog", b =>
                {
                    b.HasOne("ServerAPI.Models.Student_information", "Student")
                        .WithMany()
                        .HasForeignKey("ID_student")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Student");
                });

            modelBuilder.Entity("ServerAPI.Models.Student_Subject_Class", b =>
                {
                    b.HasOne("ServerAPI.Models.Class", "Class")
                        .WithMany()
                        .HasForeignKey("ID_class")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("ServerAPI.Models.Student_information", "student")
                        .WithMany()
                        .HasForeignKey("ID_student")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("ServerAPI.Models.Subject_major", "subject")
                        .WithMany()
                        .HasForeignKey("ID_subject")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Class");

                    b.Navigation("student");

                    b.Navigation("subject");
                });

            modelBuilder.Entity("ServerAPI.Models.Student_information", b =>
                {
                    b.HasOne("ServerAPI.Models.Major", "Major")
                        .WithMany()
                        .HasForeignKey("ID_major")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("ServerAPI.Models.User_university", "User_university")
                        .WithMany()
                        .HasForeignKey("User_id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Major");

                    b.Navigation("User_university");
                });

            modelBuilder.Entity("ServerAPI.Models.Teacher_information", b =>
                {
                    b.HasOne("ServerAPI.Models.Department", "DepartmentInfo")
                        .WithMany()
                        .HasForeignKey("Department")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("ServerAPI.Models.User_university", "User_university")
                        .WithMany()
                        .HasForeignKey("User_id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("DepartmentInfo");

                    b.Navigation("User_university");
                });

            modelBuilder.Entity("ServerAPI.Models.User_university", b =>
                {
                    b.HasOne("ServerAPI.Models.Role_person", "Role_Person")
                        .WithMany()
                        .HasForeignKey("Role_user")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Role_Person");
                });
#pragma warning restore 612, 618
        }
    }
}
